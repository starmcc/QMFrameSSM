<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 与MyBatis整合 -->
	<!-- 数据源 -->
	<bean id="config" 
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:config.properties</value>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"
			value="${base.driverClassName}" />
		<property name="url" value="${base.url}" />
		<property name="username" value="${base.username}" />
		<property name="password" value="${base.password}" />
		<!--maxActive: 最大连接数量 -->
		<property name="maxActive" value="${base.maxActive}" />
		<!--minIdle: 最小空闲连接 -->
		<property name="minIdle" value="${base.minIdle}" />
		<!--maxIdle: 最大空闲连接 -->
		<property name="maxIdle" value="${base.maxIdle}" />
		<!--initialSize: 初始化连接 -->
		<property name="initialSize" value="${base.initialSize}" />
		<!-- 连接被泄露时是否打印 -->
		<property name="logAbandoned" value="${base.logAbandoned}" />
		<!-- removeAbandoned: 是否自动回收超时连接 -->
		<property name="removeAbandoned"
			value="${base.removeAbandoned}" />
		<!-- removeAbandonedTimeout: 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout"
			value="${base.removeAbandonedTimeout}" />
		<!-- maxWait: 超时等待时间以毫秒为单位 1000等于60秒 -->
		<property name="maxWait" value="${base.maxWait}" />
		<!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->
		<property name="timeBetweenEvictionRunsMillis"
			value="${base.timeBetweenEvictionRunsMillis}" />
		<!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
		<property name="numTestsPerEvictionRun"
			value="${base.numTestsPerEvictionRun}" />
		<!-- 1000 * 60 * 30 连接在池中保持空闲而不被空闲连接回收器线程 -->
		<property name="minEvictableIdleTimeMillis"
			value="${base.minEvictableIdleTimeMillis}" />
		<property name="validationQuery"
			value="${base.validationQuery}" />
		<!-- 定时对线程池中的链接进行validateObject校验，对无效的链接进行关闭 -->
		<property name="testWhileIdle" value="${base.testWhileIdle}" />
		<!-- 指定在从连接池中拿连接时，要检查连接是否有效，若无效会将连接从连接池中移除掉 -->
		<property name="testOnBorrow" value="${base.testOnBorrow}" />
	</bean>
	<!-- 创建spring jdbcTemplate -->
	<bean class="org.springframework.jdbc.core.JdbcTemplate"
		id="jdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 配置sqlSessionFactoryBean -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:spring/MyBatis-config.xml" />
	</bean>
	<!-- 数据源End -->

	<!-- Spring注解扫描支持 -->
	<!-- Mybatis的XML扫描器 -->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> <property 
		name="basePackage" value="com.qm.dev.dao" /> </bean> -->
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定接口扫描位置 -->
		<property name="basePackage" value="com.qm.**.dao" />
	</bean>

	<!-- 注解扫描（根据自己的包名进行修改） -->
	<context:component-scan base-package="com.qm">
		<!-- 忽略controller扫描 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- QM框架注解扫描(勿修改) -->
<!-- 	<context:component-scan
		base-package="com.qm.code.**">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan> -->


	<!-- 配置事务管理器 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 通过tx:advice为指定的事务管理器设置事务属性 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- 定义属性,声明事务规则 -->
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="change*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- 定义切面 -->
	<aop:config>
		<!-- 定义切入点 -->
		<aop:pointcut
			expression="execution(* com.qm.dev.service..*.*(..))" id="serviceMethod" />
		<!-- 将事务增强与切入点结合 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
	</aop:config>
	<!-- 配置事务管理器End -->
</beans>